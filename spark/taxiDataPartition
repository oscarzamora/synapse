# Code Snipper will extract taxi data and partition by year/month of tpepPickupDateTime
# This process takes long. 

from pyspark.sql.functions import year, month, dayofmonth
from pyspark.sql.types import *

# Azure storage access info
blob_account_name = "azureopendatastorage"
blob_container_name = "nyctlc"
blob_relative_path = "yellow"
blob_sas_token = r""

# Allow SPARK to read from Blob remotely
wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path)
spark.conf.set(
  'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),
  blob_sas_token)
print('Remote blob path: ' + wasbs_path)

# SPARK read parquet, note that it won't load any data yet by now
df = spark.read.parquet(wasbs_path)
print('Register the DataFrame as a SQL temporary view: source')
df.createOrReplaceTempView('source')

df = df.withColumn("Year", year("tpepPickupDateTime")).withColumn("Month", month("tpepPickupDateTime"))
df = df.repartition("Year", "Month")
print(df.rdd.getNumPartitions())

df.write.partitionBy("Year", "Month").mode("overwrite").parquet("abfss://oszamora@oszamora.dfs.core.windows.net/taxiparquet/")
